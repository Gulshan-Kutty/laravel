<?php

use Illuminate\Support\Facades\Route;
use App\Http\Controllers\CommonController;



/*
|--------------------------------------------------------------------------
| Web Routes
|--------------------------------------------------------------------------
|
| Here is where you can register web routes for your application. These
| routes are loaded by the RouteServiceProvider and all of them will
| be assigned to the "web" middleware group. Make something great!
|
*/

Route::get('/', function () {
    return view('welcome');
});


// Route::get('/nextpage',[CommonController::class,'index']);

Route::get('/nextpage',[CommonController::class,'index'])->name('new-page');


Route::get('/compact',[CommonController::class,'compact'])->name('compact-page');





// Here's how it works:

// 1) First opens the welcome(home) page.

// 2) This code creates an HTML button element. It has a type attribute set to 'submit', indicating that when clicked, it will submit a form if it's within one. The onclick attribute is an event handler that specifies JavaScript code to execute when the button is clicked. In this case, it sets the window location to the URL generated by the Laravel route named 'new-page'.

// <button type='submit' onclick="window.location='{{ route('next-page') }}'">Click</button>

// Alternatively, the user might enter the /nextpage URL directly into their browser's address bar.

// 3) Route Definition: In the 'web.php' file, there's a route defined for /nextpage:

//Route::get('/nextpage',[CommonController::class,'index'])->name('new-page');

// This code defines a named route in Laravel. It uses the Route facade, which is part of Laravel's routing system. It specifies that when a GET request is made to the URL '/next-page', it should be handled by the methodName method of the YourController class. The name() method is used to assign a name to the route, in this case, 'next-page'.

// 4) Controller Method: The index() method in the CommonController class handles requests to the /nextpage route. When this method is invoked, it returns the 'nextpage.blade.php' view:

// public function index(){
//     return view('nextpage');
// }

// This means that when a user accesses the /nextpage route, the index() method of the CommonController class is called, which renders and returns the 'nextpage.blade.php' view, presenting it to the user in their web browser.

// So, in summary, the /nextpage route will be accessed when a user navigates to the /nextpage URL, resulting in the index() method of the CommonController class being called to render the "next page" view.

// -------------------------------------------------------

// Route::get('/nextpage', [CommonController::class,'index'])->name('new-page');

// '/nextpage' is the URI or URL path that corresponds to this route. It specifies the path that users will access in their browsers to trigger this route. In this case, when users navigate to /nextpage in their browser's address bar, Laravel will execute the specified controller action, which is the index() method of the CommonController class.

// So, '/nextpage' is the URI or URL path, and 'new-page' is the name assigned to this route. The name is used for referencing the route in other parts of your Laravel application, while the URL is what users type into their browser's address bar to access this route.


